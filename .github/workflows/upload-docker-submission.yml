name: Upload Docker Software to TIRA
on: 
  workflow_dispatch:
    inputs:
      dockerpath:
        description: The path to the directory of your submission. Should contain a Dockerfile that executes your code.
        required: true
      dataset:
        type: choice
        description: Dataset
        options:
        - authorship-verification-validation-20240408-training
        - language-identification-validation-20240429-training
        - paraphrase-identification-validation-20240515-training

jobs:
  docker-build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: registry.webis.de
          username: ${{ secrets.TIRA_DOCKER_REGISTRY_USER }}
          password: ${{ secrets.TIRA_DOCKER_REGISTRY_TOKEN }}
      -
        name: Set up Dependencies
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - 
        name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          # Set always-auth in npmrc.
          always-auth: # optional, default is false
          # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
          node-version: '20.x'
          # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
          node-version-file: # optional
          # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
          architecture: # optional
          # Set this option if you want the action to check for the latest available version that satisfies the version spec.
          check-latest: # optional
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
          registry-url: # optional
          # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
          scope: # optional
          # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
          token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
          # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
          cache: # optional
          # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
          cache-dependency-path: # optional
      -
        name: Install required python packages
        run: |
          python -m pip install --upgrade pip
          pip install tira
      -
        name: Set environment variables
        env:
          TIRA_TASK_ID: nlpbuw-fsu-sose-24
          TIRA_VM_ID: syntax-engineers
        run: |
          tira-run --export-submission-environment \
          	GITHUB_SHA=${{ github.sha }} \
          	TIRA_VM_ID=${{ env.TIRA_VM_ID }} \
          	TIRA_TASK_ID=${{ env.TIRA_TASK_ID }} \
          	TIRA_DOCKER_REGISTRY_TOKEN=${{ secrets.TIRA_DOCKER_REGISTRY_TOKEN }} \
          	TIRA_DOCKER_REGISTRY_USER=${{ secrets.TIRA_DOCKER_REGISTRY_USER }} \
          	TIRA_CLIENT_TOKEN=${{ secrets.TIRA_CLIENT_TOKEN }} \
          	TIRA_CLIENT_USER=${{ secrets.TIRA_CLIENT_USER }} \
          	TIRA_CODE_REPOSITORY_ID=${{ secrets.TIRA_CODE_REPOSITORY_ID }} \
          	TIRA_DOCKER_FILE=${{ inputs.dockerfile }}/Dockerfile \
          	TIRA_DOCKER_PATH=${{ inputs.dockerpath }} \
          	>> $GITHUB_ENV 
      - name: Build, test, and upload image
        run: |
          docker build -t ${{ env.IMAGE_TAG }} ${{ github.workspace }}/${{ inputs.dockerpath }}
          tira-run --input-dataset nlpbuw-fsu-sose-24/${{ inputs.dataset }} --image ${{ env.IMAGE_TAG }} --push true --fail-if-output-is-empty

                
